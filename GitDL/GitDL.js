fs = require('fs')
github_req = require('github')
github = new github_req()

var repo = 'KAGI'
var user = 'RadioactiveInferno'

var usage = {
	'download':'usage: download <path>',
	'upload':'usage: upload <file> <path> <message>',
	'general':'<upload | download | exit>',
	'list':'usage: list [path]'
}

function decode(code){
	return (newBuffer(code, 'base64').toString('utf8'))
}

function encode(code){
	return (newBuffer(code).toString('base64'))
}

function download(path){
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){
			return console.log('error: '+err.code)
		}
		if(res){
			console.log('NAME: '+res.name)
			console.log('SIZE: '+res.size)
			console.log('ENCODING: '+res.encoding)
			console.log('STATUS: '+res.meta.status)
			console.log(' ')
			console.log('writing file...')
			fs.writeFileSync(decode(decode(res.content)),'./downloads/'+res.name)
		}
	})
}

function upload(file,path,message){
	github.repos.createFile({
		'user':user,
		'repo':repo,
		'path':path,
		'message':message,
		'content':encode(fs.readFileSync('./uploads/'+file))
	},(err)=>{
		if(err){
			return console.log('error: '+err.code)
		}
	})
}

function list(path){
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){
			return console.log('error: '+err.code)
		}
		if(res){
			display = path?path:'master'
			console.log('Directory: '+display)
			console.log()
			for(i in res){
				if(Object.keys(res).indexOf(i)===res.length){continue}
				console.log('name: '+res[i].name)
				console.log('path: '+res[i].path)
				console.log()
			}
		}
	})
}

stdin = process.stdin
stdin.setEncoding('utf8')
stdin.on('data',(input)=>{
	if(input){
		input = input.replace(/\r\n/,'')
		input = input.split(' ')
		cmd = input[0].toUpperCase()
		switch (cmd) {
			case 'UPLOAD':
			if(input.length!==4){return console.log(usage.upload)}
			upload(input[1],input[2],input[3])
			break
			case 'DOWNLOAD':
			if(input.length!==2){return console.log(usage.download)}
			download(input[1])
			break
			case 'LIST':
			if(input.length>2){return console.log(usage.list)}
			if(!input[1]){input[1]=''}
			list(input[1])
			break
			case 'EXIT':
			process.exit(0)
			break
			default:
			console.log(usage.general)
			break
		}
	}
})