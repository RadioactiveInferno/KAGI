fs = require('fs')
github_req = require('github')
github = new github_req()

date=new Date

var repo = 'KAGI'
var user = 'RadioactiveInferno'

var usage = {
	'download':'usage: download <path>',
	'upload':'usage: upload <file> <path>',
	'general':'<upload | download | exit | list | delete>',
	'list':'usage: list [path]',
	'del':'usage: delete <path>'
}

github.authenticate({
	'type':'basic',
	'username':'KAGIControll',
	'password':'ProjectKAGI1'
})

function clear(){
	process.stdout.write('\033c')
}

function decode(code){
	return (new Buffer.from(code, 'Base64').toString('utf8'))
}

function encode(code){
	return (new Buffer.from(code).toString('Base64'))
}

function download(path,dir){
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){
			return console.log('error: '+err.code)
		}
		if(res){
			console.log('NAME: '+res.name)
			console.log('SIZE: '+res.size)
			console.log('ENCODING: '+res.encoding)
			console.log('STATUS: '+res.meta.status)
			console.log(' ')
			console.log('writing file...')
			fs.writeFileSync(dir+'/'+res.name,decode((new Buffer(res.content,res.encoding).toString('utf8'))))
			console.log('done')
		}
	})
}

function upload(file,path){
	date = JSON.stringify(date)
	date = date.substring(1,11)+date.substring(12,20)
	date = date.split('-').join('').split(':').join('')
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){
			github.repos.createFile({
				'user':user,
				'repo':repo,
				'path':path,
				'message':date,
				'content':encode(encode(fs.readFileSync('./uploads/'+file)))
			},(err,res)=>{
				if(err){
				return console.log('error: '+err.code)
			}
				console.log('finished uploading')
			})
			return
		}
		github.repos.updateMessage({
			'user':user,
			'repo':repo,
			'path':path,
			'message':date,
			'content':encode(encode(fs.readFileSync('./uploads/'+file))),
			'sha':res.sha
		},(err)=>{
			if(err){
				return console.log('error: '+err.code)
			}
			console.log('finished uploading')
		})
		return
	})
}

function list(path){
	var adjust = 50
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){return console.log('error: '+err.code)}
		if(res){
			console.log('#'+'='.repeat(adjust-2)+'#')
			for(var i in res){
				if(Object.keys(res).indexOf(i)===res.length){continue}
				console.log(line('| name: '+res[i].name,adjust-1)+'|')
				console.log(line('| path: '+res[i].path,adjust-1)+'|')
				dir = res[i].size?false:true
				console.log(line('| directory: '+dir,adjust-1)+'|')
				if(Object.keys(res).indexOf(i)!==res.length-1){console.log('+'+'-'.repeat(adjust-2)+'+')}
			}
			console.log('#'+'='.repeat(adjust-2)+'#')
			console.log()
		}
	})
}

function del(path){
	github.repos.getContent({
		'user':user,
		'repo':repo,
		'path':path
	},(err,res)=>{
		if(err){return console.log('error: '+err.code)}
		github.repos.deleteFile({
			'user':user,
			'repo':repo,
			'path':path,
			'sha':res.sha,
			'message':'deleted'
		},(err)=>{
			if(err){return console.log('error: '+err.code)}
			console.log('successfully deleted '+path)
		})
	})
}

function line(string,length){
	if(string.length<length){
		string = string+' '.repeat(length-string.length)
	} else if (string.length>length) {
		string = string.substring(0,string.length-3)+'...'
	}
	return string
}

draw = {
	'line':(symbol,length)=>{
		console.log(symbol.repeat(length))
	},
	'cent_text':(string,length)=>{
		offset = (length-string.length)/2
		offserLeft=Math.ceil(offset)
		offsetRight=Math.round(offset)
		return string = ' '.repeat(offsetLeft)+string+' '.repeat(offsetRight)
	}
}


stdin = process.stdin
stdin.setEncoding('utf8')
var ver = JSON.stringify(fs.statSync("./GitDL.js").mtime)
var ver = ver.substring(1,11)+ver.substring(12,20)
var ver = Number(ver.split('-').join('').split(':').join(''))
clear()
console.log('Checking for updates')
stdin.pause()
github.repos.getCommits({
	'user':user,
	'repo':repo,
	'path':'GitDL/GitDL.js'
},(err,res)=>{
	if(err){return console.log('file not found -> no update')}
	version = Number(res[0].commit.message)
	if(ver<version){
		fs.writeFileSync('./GitDL.backup',fs.readFileSync('./GitDL.js'))
		console.log('downloading Update')
		download('GitDL/GitDL.js','.')
	}
	if(ver==version){console.log('up to date')}
	stdin.resume()
})

stdin.on('data',(input)=>{
	if(input){
		input = input.replace(/\r\n/,'')
		input = input.split(' ')
		cmd = input[0].toUpperCase()
		switch (cmd) {
			case 'UPLOAD':
			if(input.length!==3){return console.log(usage.upload)}
			clear()
			upload(input[1],input[2],input[3])
			break
			case 'DOWNLOAD':
			if(input.length!==2){return console.log(usage.download)}
			clear()
			download(input[1],'./downloads')
			break
			case 'LIST':
			if(input.length>2){return console.log(usage.list)}
			clear()
			if(!input[1]){input[1]=''}
			list(input[1])
			break
			case 'DELETE':
			if(input.length!==2){return console.log(usage.del)}
			clear()
			del(input[1])
			break
			case 'EXIT':
			process.exit(0)
			break
			default:
			console.log(usage.general)
			break
		}
	}
})